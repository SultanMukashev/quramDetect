import re 
from fuzzywuzzy import fuzz 
all_kumandi = ["Глицерин", "Желатин", "Эфиры глицерина и смоляных кислот", "Жирных кислотсоли калия, кальция, натрия", 
    "Моно- и диглицериды жирных кислот", "Различные эфиры моно- и диглицеридов жирных кислот", "Эфиры глицерина, диацетилвинной и жирных кислот", 
    "Эфиры сахарозы и жирных кислот", "Сахароглицериды", "Эфиры полиглицеридов и жирных кислот", "Полиглицерин, полирицинолеаты", "Пропан-1,2-диоловые эфиры жирных кислот", 
    "Эфиры лактилированных жирных кислот глицерина и пропиленгликоля", "Термически окисленное соевое и бобовое масло с моно- и диглицеридами жирных кислот", " Стеароил-2-лактилат натрия", 
    "Стеароил-2-лактилат кальция", "Стеарилтартрат", "Сорбитан моностеарат", "Сорбитан тристеарат", "Сорбитан монолаурат", "Сорбитан моноолеат", 
    "Сорбитан монопальмитат", "Костный фосфат", "Стеариновая кислота", "Стеарат магния", "Инозиновая кислота", "Инозинат натрия двузамещенный", 
    "Инозинат калия двузамещенный", "5-инозинат кальция", "5-рибонуклеотиды кальция", "5-рибонуклеотиды натрия двузамещенные", "Глицин и его натриевые соли", 
    "Шеллак", "L-цистеин", "Искусственные красители", "Искусственные ароматизаторы", "Бета-каротин", "Бутилоксианизол или бутилгидрокситолуол", 
    "Липолизированный молочный жир", "Сухие кисломолочные продукты", "Стеарат кальция", "Стеароил-лактилат кальция",'E107', 'E133', 'E154', 'E495', 'E920', 'E100', 'E101', 'E102', 'E104', 'E110', 'E122', 'E123', 'E124', 'E127', 'E128', 'E131', 'E132', 'E140', 'E141', 'E142', 'E151', 'E153', 'E160c', 'E160f', 'E161c', 'E161f', 'E163', 'E160a', 'E160d', 'E161a', 'E161d', 'E161g', 'E170', 'E160e', 'E161b', 'E161e', 'E162', 'E180', 'E213', 'E214', 'E215', 'E216', 'E217', 'E218', 'E219', 'E227', 'E230', 'E231', 'E232', 'E233', 'E270', 'E282', 'E304', 'E306', 'E308', 'E309', 'E302', 'E307', 'E311', 'E312', 'E320', 'E321', 'E325', 'E326', 'E327', 'E333', 'E334', 'E335', 'E336', 'E337', 'E341', 'E322', 'E422', 'E470', 'E471', 'E472', 'E473', 'E474', 'E475', 'E476', 'E477', 'E478', 'E481', 'E482', 'E483', 'E491', 'E492', 'E493', 'E494', 'E542', 'E544', 'E556', 'E620', 'E621', 'E622', 'E623', 'E627', 'E631', 'E635', 'E904']

all_haram = ["Кошениль/карминовая кислота", "Тартрат кальция", "Экстракт Квиллайи", "Аденозин 5'-монофосфат", 
    "Алкоголь как растворитель для придания аромата", "Алкоголь в сухой форме в качестве ингредиента", 
    "Бекон", "Кусочки бекона", "Бальзамический уксус", "Пиво", "Ароматизатор пива", "Экстракт пивных дрожжей", 
    "Пивные дрожжи", 'E120', 'E103', 'E121', 'E125', 'E129', 'E182', 'E240', 'E313', 'E314', 'E324', 'E388', 'E389', 'E390', 'E391', 'E399h', 'E425', 'E479', 'E480', 'E484', 'E485', 'E486', 'E487', 'E488', 'E489', 'E496', 'E505', 'E537', 'E538', 'E557', 'E626', 'E700', 'E701', 'E710', 'E711', 'E712', 'E713', 'E714', 'E715', 'E716', 'E717', 'E906', 'E918', 'E919', 'E922', 'E923', 'E929', 'E940', 'E946', 'E904', 'E1000', 'E1001', 'E1510']
        # Threshold for fuzzysearch
suspected_ingredients = [ 
    "Глицерин", "Желатин", "Эфиры глицерина и смоляных кислот", "Жирных кислотсоли калия, кальция, натрия", 
    "Моно- и диглицериды жирных кислот", "Различные эфиры моно- и диглицеридов жирных кислот", "Эфиры глицерина, диацетилвинной и жирных кислот", 
    "Эфиры сахарозы и жирных кислот", "Сахароглицериды", "Эфиры полиглицеридов и жирных кислот", "Полиглицерин, полирицинолеаты", "Пропан-1,2-диоловые эфиры жирных кислот", 
    "Эфиры лактилированных жирных кислот глицерина и пропиленгликоля", "Термически окисленное соевое и бобовое масло с моно- и диглицеридами жирных кислот", " Стеароил-2-лактилат натрия", 
    "Стеароил-2-лактилат кальция", "Стеарилтартрат", "Сорбитан моностеарат", "Сорбитан тристеарат", "Сорбитан монолаурат", "Сорбитан моноолеат", 
    "Сорбитан монопальмитат", "Костный фосфат", "Стеариновая кислота", "Стеарат магния", "Инозиновая кислота", "Инозинат натрия двузамещенный", 
    "Инозинат калия двузамещенный", "5-инозинат кальция", "5-рибонуклеотиды кальция", "5-рибонуклеотиды натрия двузамещенные", "Глицин и его натриевые соли", 
    "Шеллак", "L-цистеин", "Искусственные красители", "Искусственные ароматизаторы", "Бета-каротин", "Бутилоксианизол или бутилгидрокситолуол", 
    "Липолизированный молочный жир", "Сухие кисломолочные продукты", "Стеарат кальция", "Стеароил-лактилат кальция" 
]
haram_ingredients = [ 
    "Кошениль/карминовая кислота", "Тартрат кальция", "Экстракт Квиллайи", "Аденозин 5'-монофосфат", 
    "Алкоголь как растворитель для придания аромата", "Алкоголь в сухой форме в качестве ингредиента", 
    "Бекон", "Кусочки бекона", "Бальзамический уксус", "Пиво", "Ароматизатор пива", "Экстракт пивных дрожжей", 
    "Пивные дрожжи",  
]
all_haram_final = all_haram + haram_ingredients 
all_kumandi_final = all_kumandi + suspected_ingredients
 
def check_ingredients(to_check, all_kumandi_final, all_haram_final, threshold=80): 
    """ 
    Проверяет список ингредиентов на наличие сомнительных (күмәнді) или харам добавок. 
 
    :param to_check: Список ингредиентов для проверки. 
    :param all_kumandi: Список күмәнді ингредиентов. 
    :param all_haram: Список харам ингредиентов. 
    :param threshold: Порог сходства для нечеткого поиска (0-100). 
    """ 
    is_kumandi = False 
    is_haram = False 
 
    def matches(element, reference_list): 
        """Проверяет, есть ли элемент в списке с учетом вариаций написания.""" 
        element_lower = element.lower() 
        for ref in reference_list: 
            ref_lower = ref.lower() 
            # Точное совпадение 
            # if ref_lower in element_lower or element_lower in ref_lower: 
            #     return True 
            # Регулярное совпадение 
            # if re.search(rf"\b{re.escape(ref_lower)}\b", element_lower): 
            #     return True 
            # Нечеткое сравнение 
            if fuzz.partial_ratio(element_lower, ref_lower) >= threshold: 
                return True 
        return False 
 
    for element in to_check: 
        if matches(element, all_kumandi): 
            print(f"{element} - күмәнді") 
            is_kumandi = True 
        elif matches(element, all_haram): 
            print(f"{element} - харам") 
            is_haram = True 
 
    if is_haram: 
        print("Тауар адал емес") 
    elif is_kumandi: 
        print("Тауардың құрамында күмәнді қоспалар бар") 
    else: 
        print("Тауардың құрамы таза") 
 
 
# Пример данных 
to_check = ["вода", "сок манго", "сахар", "лимонная кислота", "аскорбиновая кислота", "сукралоза", "пищевые красители", "E102", "E110"] 
 
# Проверка 
check_ingredients(to_check, all_kumandi_final, all_haram_final, 100)
